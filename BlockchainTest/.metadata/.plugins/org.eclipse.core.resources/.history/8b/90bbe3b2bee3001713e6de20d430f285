package com.psl;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

public class Sum {

	public static void main(String[] args) {
		Sum s = new Sum();
		Integer sum = 0, product = 1;
		List<Integer> list = new ArrayList<Integer>();
		List<Integer> even = new ArrayList<Integer>();
		List<Integer> odd = new ArrayList<Integer>();
		List<Integer> odd3 = new ArrayList<Integer>();

		list.add(4);
		list.add(9);
		list.add(3);
		list.add(2);
		list.add(6);
		list.add(7);

		sum = s.sum(list);
		System.out.println("sum: " + sum);

		product = s.product(list);
		System.out.println("product: " + product);

		odd = s.isOdd(list);
		System.out.print("ODD NOS: ");
		for (Integer o : odd) {
			System.out.print(o + " ");
		}
		System.out.println();

		even = s.isEven(list);
		System.out.print("Even NOS: ");
		for (Integer e : even) {
			System.out.print(e + " ");
		}
		System.out.println();

		s.even3(list);
		odd3 = s.odd3(list);
		System.out.print("Odd NOS: ");
		for (Integer o3 : odd3) {
			System.out.print(o3 + " ");

		}
		s.mult7(list);
		s.foobar();
		s.planet();
	}

	public Integer sum(List<Integer> list) {
		Integer sum = 0;

		for (Integer list1 : list) {
			sum = sum + list1;
		}
		return sum;
		// System.out.println("sum: " + sum);
	}

	public Integer product(List<Integer> list) {
		Integer product = 1;

		for (Integer list1 : list) {
			product = product * list1;
		}

		return product;
		// System.out.println("product: " + product);
	}

	public List<Integer> isOdd(List<Integer> list) {
		List<Integer> list1 = new ArrayList<Integer>();
		for (Integer l : list) {
			if (l % 2 != 0) {
				list1.add(l);
			}
		}
		return list1;

	}

	public List<Integer> isEven(List<Integer> list) {
		List<Integer> list1 = new ArrayList<Integer>();
		for (Integer l : list) {
			if (l % 2 == 0) {
				list1.add(l);
			}
		}

		return list1;

	}

	public void even3(List<Integer> list) {
		List<Integer> list1 = new ArrayList<Integer>();
		list1 = isEven(list);
		System.out.println("divisible by 3 and even");

		for (Integer e3 : list1) {
			if (mul3(e3))
				System.out.println(e3);
		}
	}

	// public void odd3(List<Integer> list) {
	// List<Integer> list1 = new ArrayList<Integer>();
	// list1 = isOdd(list);
	//
	// System.out.println("divisible by 3 and odd");
	// for (Integer e3 : list1) {
	// if (mul3(e3))
	// System.out.print(e3 + " ");
	// }
	// System.out.println();
	// }

	public List<Integer> odd3(List<Integer> list) {
		List<Integer> list1 = new ArrayList<Integer>();
		list1 = isOdd(list);

		System.out.println("divisible by 3 and odd");

//		for (Iterator iterator = list1.iterator(); iterator.hasNext();) {
//			Integer e3 = (Integer) iterator.next();
//			if (!mul3(e3))
//				// System.out.print(e3 + " ");
//				list1.remove(e3);
//
//		}
		
		 for (Integer e3 : list1) { if (!mul3(e3)) // System.out.print(e3 +
		 " "); list1.remove(e3); }
		 
		return list1;
		// System.out.println();
	}

	public void mult7(List<Integer> list) {
		List<Integer> list1 = new ArrayList<Integer>();

		System.out.println("multiples of 7");
		for (Integer l3 : list1) {
			if (mul7(l3)) {
				System.out.println(l3);
			}
		}

	}

	public void foobar() {
		System.out.println("FOO-BAR:");
		for (int d = 0; d <= 100; d++) {
			if (mul3(d))
				System.out.print("foo");
			if (mul5(d))
				System.out.println("bar");
			else
				System.out.println(d);
		}
	}

	public void planet() {
		System.out.println("PLANET:");
		for (int d = 0; d <= 20; d++) {
			if (mul3(d))
				System.out.print("earth");
			if (mul5(d))
				System.out.print("jupiter");
			if (mul9(d))
				System.out.print("pluto");
			else if (!mul3(d) && !mul5(d) && !(mul9(d)))
				System.out.println(d);
		}
	}

	public boolean mul3(Integer n) {
		if (n % 3 == 0)
			return true;
		else
			return false;
	}

	public boolean mul5(Integer n) {
		if (n % 5 == 0)
			return true;
		else
			return false;
	}

	public boolean mul7(Integer n) {
		if (n % 7 == 0)
			return true;
		else
			return false;
	}

	public boolean mul9(Integer n) {
		if (n % 9 == 0)
			return true;
		else
			return false;
	}
}
